/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-12 13:29:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1714759346025L));
    _jspx_dependants.put("jar:file:/D:/study/sliit/java%20oop%20project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Vehicle_rentalDb/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("` <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("	overflow:hidden;\r\n");
      out.write("}\r\n");
      out.write(".courosalImages{\r\n");
      out.write("    height:100vh;\r\n");
      out.write("    object-fit:cover;\r\n");
      out.write("}\r\n");
      out.write(".overlay-content{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 50%;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    transform: translate(-50%, -50%);\r\n");
      out.write("    z-index: 1000; /* Make sure this value is higher than the z-index of the carousel */\r\n");
      out.write("    background-color: rgba(255, 255, 255, 0.8); /* Add a background color with some transparency */\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".carousel{\r\n");
      out.write("    z-index:1;\r\n");
      out.write("}\r\n");
      out.write(".row{\r\n");
      out.write("position: absolute;\r\n");
      out.write("    top: 80%;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    transform: translate(-50%, -50%);\r\n");
      out.write("    z-index: 1000; \r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".hidden{\r\n");
      out.write("background-color:#EA3C54;\r\n");
      out.write("padding:2%,0,2%,0;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body  style=\"padding-top:0;\">\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg bg-body-tertiary\" style=\"position: absolute; top: 0; width: 100%; background-color: rgba(0, 0, 0, 0.0); z-index: 100;\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"#\">RentACar</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Vehicles</a>\r\n");
      out.write("        </li>\r\n");
      out.write("     \r\n");
      out.write("      </ul>\r\n");
      out.write("  \r\n");
      out.write("      <a class=\"btn btn-outline-success\" href=\"login.jsp\" style=\"margin-right: 20px;\">Login</a>\r\n");
      out.write("      \r\n");
      out.write("      <button class=\"btn btn-outline-danger\">Register</button>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"carouselExample\" class=\"carousel slide\">\r\n");
      out.write("  <div class=\"carousel-inner\">\r\n");
      out.write("    <div class=\"carousel-item active\">\r\n");
      out.write("      <img src=\"images/landingPage/1.jpg\" class=\"d-block w-100 courosalImages\" alt=\"...\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"carousel-item\">\r\n");
      out.write("      <img src=\"images/landingPage/2.jpg\" class=\"d-block w-100 courosalImages\" alt=\"...\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"carousel-item\">\r\n");
      out.write("      <img src=\"images/landingPage/3.jpg\" class=\"d-block w-100 courosalImages\" alt=\"...\">\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"prev\">\r\n");
      out.write("    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n");
      out.write("    <span class=\"visually-hidden\">Previous</span>\r\n");
      out.write("  </button>\r\n");
      out.write("  <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"next\">\r\n");
      out.write("    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n");
      out.write("    <span class=\"visually-hidden\">Next</span>\r\n");
      out.write("  </button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"overlay-content\">\r\n");
      out.write("<div class=\"hidden\">\r\n");
      out.write("<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${regresult}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("</div>\r\n");
      out.write("    <h2>Welcome to our Car Rental Service</h2>\r\n");
      out.write("    <p>Explore our wide range of vehicles and find the perfect one for your needs.</p>\r\n");
      out.write("    <a href=\"#\" class=\"btn btn-primary\">Browse Vehicles</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("	<div class=\"col-4\">\r\n");
      out.write("	<div class=\"card\" style=\"width: 18rem;\">\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("  <h3>100</h3>\r\n");
      out.write("    <h5 class=\"card-title\">Customer Satisfaction</h5>\r\n");
      out.write("    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"col-4\">\r\n");
      out.write("	<div class=\"card\" style=\"width: 18rem;\">\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("  	<h3>584</h3>\r\n");
      out.write("    <h5 class=\"card-title\">Vehicles</h5>\r\n");
      out.write("    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"col-4\">\r\n");
      out.write("	<div class=\"card\" style=\"width: 18rem;\">\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("  <h3>1054</h3>\r\n");
      out.write("    <h5 class=\"card-title\">Users</h5>\r\n");
      out.write("    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    // Function to animate number counting\r\n");
      out.write("    function animateValue(element, start, end, duration) {\r\n");
      out.write("        let range = end - start;\r\n");
      out.write("        let current = start;\r\n");
      out.write("        let increment = end > start ? 1 : -1;\r\n");
      out.write("        let stepTime = Math.abs(Math.floor(duration / range));\r\n");
      out.write("        let timer = setInterval(function () {\r\n");
      out.write("            current += increment;\r\n");
      out.write("            element.textContent = current;\r\n");
      out.write("            if (current == end) {\r\n");
      out.write("                clearInterval(timer);\r\n");
      out.write("            }\r\n");
      out.write("        }, stepTime);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Get all h3 elements inside the cards\r\n");
      out.write("    let h3Elements = document.querySelectorAll('.card h3');\r\n");
      out.write("\r\n");
      out.write("    // Loop through each h3 element and animate its value\r\n");
      out.write("    h3Elements.forEach(function (h3) {\r\n");
      out.write("        let startValue = 0; // Start value for counting animation\r\n");
      out.write("        let endValue = parseInt(h3.textContent); // Get the end value from the text content of the h3 element\r\n");
      out.write("        let duration = 3000; // Duration of the animation in milliseconds\r\n");
      out.write("        animateValue(h3, startValue, endValue, duration);\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
